version: '2.4'

# environmental variables *for Docker Compose* will be loaded from a `.env` file
# in the same directory as this file

services:
  unifi:
    image: lscr.io/linuxserver/unifi-controller
    container_name: unifi
    hostname: unifi
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - MEM_LIMIT=1280
    restart: unless-stopped
    volumes:
      - ${DOCKER_USERDIR}/volumes/unifi:/config
    ports:
      - 1900:1900/udp
      - 3478:3478/udp
      - 10001:10001/udp
      - 3478:3478
      - 5514:5514
      - 6789:6789
      - 8080:8080
      - 8081:8081
      - 8443:8443
      - 8843:8843
      - 8880:8880
    # needs to be on macvlan network
    # https://github.com/jacobalberty/unifi-docker/issues/159
    # mem_limit: 512m
    networks:
      myvlan:
        ipv4_address: "192.168.1.222"
      # internal:
    # labels:
    #   ## Throws "404" (I think on the Unifi side?)
    #   - traefik.enable=true
    #   - traefik.http.routers.unifi.rule=Host("unifi.${LOCAL_DOMAIN_NAME}")
    #   - traefik.http.routers.unifi.entryponts=web
    #   - traefik.http.routers.unifi.middlewares=unifi-to-https

    #   - traefik.http.routers.unifi-secure.rule=Host("unifi.${LOCAL_DOMAIN_NAME}")
    #   - traefik.http.routers.unifi-secure.entryponts=websecure
    #   - traefik.http.routers.unifi-secure.tls=true
    #   - traefik.http.services.unifi-secure.loadbalancer.server.port=8443  # internal port, when multiple ports are exposed

    #   - traefik.http.middlewares.unifi-to-https.redirectscheme.scheme=https
    #   - traefik.http.middlewares.unifi-to-https.redirectscheme.permanent=true

networks:
  default:
    external:
      name: meta_external
  myvlan:
    external:
      name: meta_vlan
