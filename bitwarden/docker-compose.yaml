#version: '2.4'

# environmental variables *for Docker Compose* will be loaded from a `.env` file
# in the same directory as this file


# https://github.com/dani-garcia/bitwarden_rs/wiki/Using-the-MariaDB-%28MySQL%29-Backend
# defaults to includes SQLite, but can run on Maria DB
# https://github.com/dani-garcia/bitwarden_rs/wiki/Backing-up-your-vault
# https://github.com/dani-garcia/bitwarden_rs/wiki/SMTP-configuration


services:

  # DDNS is done under the 'ddns' stack

  vaultwarden:
    image: vaultwarden/server:latest
    container_name: vaultwarden
    restart: unless-stopped
    # user: ${PUID}:${PGID}
    environment:
      - TZ=${TZ}
      - ROCKET_PORT=8080
      - WEBSOCKET_ENABLED=true
      - ADMIN_TOKEN=${BITWARDEN_ADMIN_TOKEN}  # value in config.json overrules this
      - DOMAIN=https://vault.${PUBLIC_DOMAIN_NAME}
      # - SIGNUPS_ALLOWED=false
      # - INVITATIONS_ALLOWED=false
    volumes:
      - ${DOCKER_USERDIR}/volumes/vaultwarden:/data
    ports:
      - 9962:8080
      # websocket
      - 3012:3012
    labels:
      # - traefik.enable=false
      - traefik.enable=true
      # specify internal port
      - traefik.http.services.bitwarden-service.loadbalancer.server.port=8080
      - traefik.http.routers.bitwarden.service=bitwarden-service
      - traefik.http.routers.bitwarden-secure.service=bitwarden-service
      
      - traefik.http.services.bitwarden-local-service.loadbalancer.server.port=8080
      - traefik.http.routers.bitwarden-local.service=bitwarden-local-service
      - traefik.http.routers.bitwarden-local-secure.service=bitwarden-local-service


      - traefik.http.routers.bitwarden-local.rule=Host("vault.${LOCAL_DOMAIN_NAME}")
      - traefik.http.routers.bitwarden-local.entrypoints=web
      - traefik.http.routers.bitwarden-local.middlewares=bitwarden-local-to-https

      - traefik.http.routers.bitwarden-local-secure.rule=Host("vault.${LOCAL_DOMAIN_NAME}")
      - traefik.http.routers.bitwarden-local-secure.entrypoints=websecure
      - traefik.http.routers.bitwarden-local-secure.tls=true
      # - traefik.http.routers.bitwarden-local-secure.tls.certresolver=myresolver
      
      - traefik.http.middlewares.bitwarden-local-to-https.redirectscheme.scheme=https
      # - traefik.http.middlewares.bitwarden-local-to-https.redirectscheme.permanent=true


      - traefik.http.routers.bitwarden.rule=Host("vault.${PUBLIC_DOMAIN_NAME}")
      - traefik.http.routers.bitwarden.entrypoints=web
      - traefik.http.routers.bitwarden.middlewares=bitwarden-to-https

      - traefik.http.routers.bitwarden-secure.rule=Host("vault.${PUBLIC_DOMAIN_NAME}")
      - traefik.http.routers.bitwarden-secure.entrypoints=websecure
      - traefik.http.routers.bitwarden-secure.tls=true
      - traefik.http.routers.bitwarden-secure.tls.certresolver=myresolver
      
      - traefik.http.middlewares.bitwarden-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.bitwarden-to-https.redirectscheme.permanent=true


      - traefik.http.routers.bitwarden-websocket.rule=Host("vault.${PUBLIC_DOMAIN_NAME}") && Path("/notifications/hub")
      - traefik.http.routers.bitwarden-websocket.entrypoints=web
      - traefik.http.routers.bitwarden-websocket.middlewares=bitwarden-websocket-to-https

      - traefik.http.routers.bitwarden-websocket-secure.rule=Host("vault.${PUBLIC_DOMAIN_NAME}") && Path("/notifications/hub")
      - traefik.http.routers.bitwarden-websocket-secure.entrypoints=websecure
      - traefik.http.routers.bitwarden-websocket-secure.tls=true
      - traefik.http.routers.bitwarden-websocket-secure.tls.certresolver=myresolver


      - traefik.http.services.bitwarden-websocket-service.loadbalancer.server.port=3012
      - traefik.http.routers.bitwarden-websocket.service=bitwarden-websocket-service
      - traefik.http.routers.bitwarden-websocket-secure.service=bitwarden-websocket-service

      - traefik.http.middlewares.bitwarden-websocket-to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.bitwarden-websocket-to-https.redirectscheme.permanent=true


  # backup:
  #   # to set up rclone remote before first run (here, type 'local', named 'local')
  #   # docker run -it -v /home/william/docker/volumes/vaultwarden-backup/:/config/ ttionya/vaultwarden-backup:latest rclone config
  #   image: ttionya/vaultwarden-backup:latest
  #   restart: always
  #   environment:
  #     - RCLONE_REMOTE_NAME=local
  #     - RCLONE_REMOTE_DIR=/backup/
  #     - CRON="5 * * * *"
  #     # - ZIP_ENABLE='TRUE'
  #     # - ZIP_PASSWORD='WHEREISMYPASSWORD?'
  #     # - ZIP_TYPE='zip'
  #     - BACKUP_FILE_DATE_SUFFIX="-%H%M%S"
  #     - BACKUP_KEEP_DAYS=30
  #     # - PING_URL=''
  #     # - MAIL_SMTP_ENABLE='FALSE'
  #     # - MAIL_SMTP_VARIABLES=''
  #     # - MAIL_TO=''
  #     # - MAIL_WHEN_SUCCESS='TRUE'
  #     # - MAIL_WHEN_FAILURE='TRUE'
  #     - TIMEZONE=${TZ}
  #   volumes:
  #     - ${DOCKER_USERDIR}/volumes/vaultwarden:/bitwarden/data/:ro
  #     - ${DOCKER_USERDIR}/volumes/vaultwarden-backup:/config/
  #     - ${NAS_DIR}/home/docker/vaultwarden-backup:/backup/
  #   #   - /path/to/env:/.env

# other backup options at https://github.com/dani-garcia/vaultwarden/wiki/Backing-up-your-vault
# including  https://github.com/Bruceforce/vaultwarden-backup

networks:
  default:
    external: true
    name: meta_external
